name: Optimize UserScripts ðŸ¤–

on:
  # Run this workflow manually from the Actions tab
  workflow_dispatch:

  # Run this workflow on pushes to the main branch
  push:
    branches:
      - main # Or your default branch name
    paths:
      - 'userscripts/Minify/Backup/**.user.js'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant permission to write back to the repository

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Closure Compiler
        id: cache-compiler
        uses: actions/cache@v4
        with:
          path: ~/closure-compiler.jar
          key: ${{ runner.os }}-closure-compiler-latest

      - name: Download Closure Compiler
        if: steps.cache-compiler.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss. Downloading new Closure Compiler..."
          curl -L -s https://dl.google.com/closure-compiler/compiler-latest.zip -o compiler.zip
          unzip compiler.zip compiler.jar
          mv compiler.jar ~/closure-compiler.jar
          rm compiler.zip
        shell: bash

      - name: Optimize Scripts
        run: |
          # Ensure the output directory exists
          mkdir -p userscripts/Minify/Min
          # Loop through each script in the source directory
          for file in userscripts/Minify/Backup/*.user.js; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              output_file="userscripts/Minify/Min/$filename"
              echo "Compiling: ${file} -> ${output_file}"
              java -jar ~/closure-compiler.jar \
                --js "$file" \
                --js_output_file "$output_file" \
                --compilation_level SIMPLE_OPTIMIZATIONS \
                --language_in ECMASCRIPT_NEXT \
                --language_out ECMASCRIPT_2020
            fi
          done
        shell: bash

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # Check if there are any changes to commit
          if ! git diff --quiet userscripts/Minify/Min/; then
            git add userscripts/Minify/Min/*.user.js
            git commit -m "ci: optimize userscripts"
            git push
          else
            echo "No changes to commit."
          fi
        shell: bash
